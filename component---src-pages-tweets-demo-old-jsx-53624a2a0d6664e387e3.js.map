{"version":3,"sources":["webpack:///./src/pages/tweets-demo-old.jsx"],"names":["GeneratedTweets","getState","props","tweets","canLoadMore","loadingTweets","error","currentPage","user","queryString","parse","location","search","getDerivedStateFromProps","state","new_user","componentDidUpdate","this","fetchTweets","fetch","method","then","response","text","res","tweet_arr","JSON","length","setState","_tweets","i","push","tweet","key","id","concat","catch","Index"],"mappings":"sLAOMA,E,wLACJC,SAAA,SAASC,GACP,MAAO,CACLC,OAAQ,GACRC,aAAa,EACbC,eAAe,EACfC,OAAO,EACPC,YAAa,EACbC,KAAMC,IAAYC,MAAMR,EAAMS,SAASC,QAAQJ,O,EAI5CK,yBAAP,SAAgCX,EAAOY,GACrC,IAAIC,EAAWN,IAAYC,MAAMR,EAAMS,SAASC,QAAQJ,KAExD,OAAIO,IAAaD,EAAMN,KACd,CACLL,OAAQ,GACRC,aAAa,EACbC,eAAe,EACfC,OAAO,EACPC,YAAa,EACbC,KAAMO,GAIH,M,EAGTC,mBAAA,WACMC,KAAKH,MAAMV,aAA0C,IAA3Ba,KAAKH,MAAMP,aACvCU,KAAKC,e,EAITA,YAAA,WAAe,IAAD,OACZC,MAAM,gEAAkEF,KAAKH,MAAMN,KAAO,IAAMS,KAAKH,MAAMP,YAAa,CAAEa,OAAQ,QAC/HC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACL,IAAIC,EAAYC,KAAKhB,MAAMc,GAEF,IAArBC,EAAUE,QACZ,EAAKC,SAAS,CACZxB,aAAa,EACbC,eAAe,EACfC,OAAO,IAMX,IAFA,IAAIuB,EAAU,GAELC,EAAI,EAAGA,EAAIL,EAAUE,SAAUG,EACtCD,EAAQE,KAAK,kBAAC,IAAD,CAAOC,MAAOP,EAAUK,GAAIG,IAAKR,EAAUK,GAAGI,MAG7D,EAAKN,SAAS,CACZzB,OAAQ,EAAKW,MAAMX,OAAOgC,OAAON,GACjCxB,eAAe,EACfE,YAAa,EAAKO,MAAMP,YAAc,OAGzC6B,OAAM,SAAA9B,GACL,EAAKsB,SAAS,CACZxB,aAAa,EACbC,eAAe,EACfC,OAAO,Q,GAjEa+B,WAuEfrC","file":"component---src-pages-tweets-demo-old-jsx-53624a2a0d6664e387e3.js","sourcesContent":["import React from \"react\"\nimport queryString from 'query-string'\n\nimport Index from \"./index.jsx\"\nimport Tweet from \"../components/tweet\"\n\n// Modified for demo\nclass GeneratedTweets extends Index {\n  getState(props) {\n    return {\n      tweets: [],\n      canLoadMore: true,\n      loadingTweets: true,\n      error: false,\n      currentPage: 0,\n      user: queryString.parse(props.location.search).user\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let new_user = queryString.parse(props.location.search).user\n\n    if (new_user !== state.user) {\n      return {\n        tweets: [],\n        canLoadMore: true,\n        loadingTweets: true,\n        error: false,\n        currentPage: 0,\n        user: new_user\n      }\n    }\n\n    return null\n  }\n\n  componentDidUpdate() {\n    if (this.state.canLoadMore && this.state.currentPage === 0) {\n      this.fetchTweets()\n    }\n  }\n\n  fetchTweets() {\n    fetch('https://infinite-scroll-is-not-enough.herokuapp.com/generate/' + this.state.user + '/' + this.state.currentPage, { method: 'Get' })\n      .then(response => response.text())\n      .then((res) => {\n        let tweet_arr = JSON.parse(res)\n\n        if (tweet_arr.length === 0) {\n          this.setState({\n            canLoadMore: false,\n            loadingTweets: false,\n            error: true \n          })\n        }\n        \n        let _tweets = []\n\n        for (let i = 0; i < tweet_arr.length; ++i) {\n          _tweets.push(<Tweet tweet={tweet_arr[i]} key={tweet_arr[i].id} />)\n        }\n\n        this.setState({\n          tweets: this.state.tweets.concat(_tweets),\n          loadingTweets: false,\n          currentPage: this.state.currentPage + 1\n        })\n      })\n      .catch(error => {\n        this.setState({\n          canLoadMore: false,\n          loadingTweets: false,\n          error: true \n        })\n      })\n  }\n}\n\nexport default GeneratedTweets\n\n"],"sourceRoot":""}