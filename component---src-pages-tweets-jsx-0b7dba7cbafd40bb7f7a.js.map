{"version":3,"sources":["webpack:///./src/pages/tweets.jsx"],"names":["GeneratedTweets","getState","props","tweets","canLoadMore","loadingTweets","error","user","queryString","parse","location","search","count","getDerivedStateFromProps","state","new_user","componentDidUpdate","this","fetchTweets","_this","fetch","method","then","response","text","res","tweet_arr","JSON","length","setState","_tweets","i","push","tweet","key","concat","catch","Index"],"mappings":"sLAMMA,E,wLACJC,SAAA,SAASC,GACP,MAAO,CACLC,OAAQ,GACRC,aAAa,EACbC,eAAe,EACfC,OAAO,EACPC,KAAMC,IAAYC,MAAMP,EAAMQ,SAASC,QAAQJ,KAC/CK,MAAO,I,EAIJC,yBAAP,SAAgCX,EAAOY,GACrC,IAAIC,EAAWP,IAAYC,MAAMP,EAAMQ,SAASC,QAAQJ,KAExD,OAAIQ,IAAaD,EAAMP,KACd,CACLJ,OAAQ,GACRC,aAAa,EACbC,eAAe,EACfC,OAAO,EACPC,KAAMQ,EACNH,MAAO,GAIJ,M,EAGTI,mBAAA,WACMC,KAAKH,MAAMV,aAAoC,IAArBa,KAAKH,MAAMF,OACvCK,KAAKC,e,EAITA,YAAA,WACE,IAAIC,EAAQF,KAEZG,MAAM,gEAAkEH,KAAKH,MAAMP,KAAM,CAAEc,OAAQ,QAChGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACL,IAAIC,EAAYC,KAAKlB,MAAMgB,GAEF,IAArBC,EAAUE,QACZT,EAAMU,SAAS,CACbxB,eAAe,IAMnB,IAFA,IAAIyB,EAAU,GAELC,EAAI,EAAGA,EAAIL,EAAUE,SAAUG,EACtCD,EAAQE,KAAK,kBAAC,IAAD,CAAOC,MAAOP,EAAUK,GAAIG,IAAKH,EAAIZ,EAAML,MAAMF,SAGhEO,EAAMU,SAAS,CACb1B,OAAQgB,EAAML,MAAMX,OAAOgC,OAAOL,GAClCzB,eAAe,EACfO,MAAOO,EAAML,MAAMF,MAAQc,EAAUE,YAGxCQ,OAAM,SAAA9B,GACLa,EAAMU,SAAS,CACbzB,aAAa,EACbC,eAAe,EACfC,OAAO,Q,GAjEa+B,WAuEfrC","file":"component---src-pages-tweets-jsx-0b7dba7cbafd40bb7f7a.js","sourcesContent":["import React from \"react\"\nimport queryString from 'query-string'\n\nimport Index from \"./index.jsx\"\nimport Tweet from \"../components/tweet\"\n\nclass GeneratedTweets extends Index {\n  getState(props) {\n    return {\n      tweets: [],\n      canLoadMore: true,\n      loadingTweets: true,\n      error: false,\n      user: queryString.parse(props.location.search).user,\n      count: 0\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let new_user = queryString.parse(props.location.search).user\n\n    if (new_user !== state.user) {\n      return {\n        tweets: [],\n        canLoadMore: true,\n        loadingTweets: true,\n        error: false,\n        user: new_user,\n        count: 0\n      }\n    }\n\n    return null\n  }\n\n  componentDidUpdate() {\n    if (this.state.canLoadMore && this.state.count === 0) {\n      this.fetchTweets()\n    }\n  }\n\n  fetchTweets() {\n    let _this = this\n\n    fetch('https://infinite-scroll-is-not-enough.herokuapp.com/generate/' + this.state.user, { method: 'Get' })\n      .then(response => response.text())\n      .then((res) => {\n        let tweet_arr = JSON.parse(res)\n\n        if (tweet_arr.length === 0) {\n          _this.setState({\n            loadingTweets: false\n          })\n        }\n        \n        let _tweets = []\n\n        for (let i = 0; i < tweet_arr.length; ++i) {\n          _tweets.push(<Tweet tweet={tweet_arr[i]} key={i + _this.state.count} />)\n        }\n\n        _this.setState({\n          tweets: _this.state.tweets.concat(_tweets),\n          loadingTweets: false,\n          count: _this.state.count + tweet_arr.length\n        })\n      })\n      .catch(error => {\n        _this.setState({\n          canLoadMore: false,\n          loadingTweets: false,\n          error: true \n        })\n      })\n  }\n}\n\nexport default GeneratedTweets\n\n"],"sourceRoot":""}