{"version":3,"sources":["webpack:///./src/pages/tweets.jsx"],"names":["GeneratedTweets","getState","props","tweets","canLoadMore","loadingTweets","error","user","queryString","parse","location","search","count","getDerivedStateFromProps","state","new_user","componentDidUpdate","this","fetchTweets","fetch","method","then","res","json","tweet_arr","length","setState","_tweets","i","push","tweet","key","concat","catch","Index"],"mappings":"sLAMMA,E,wLACJC,SAAA,SAASC,GACP,MAAO,CACLC,OAAQ,GACRC,aAAa,EACbC,eAAe,EACfC,OAAO,EACPC,KAAMC,IAAYC,MAAMP,EAAMQ,SAASC,QAAQJ,KAC/CK,MAAO,I,EAIJC,yBAAP,SAAgCX,EAAOY,GACrC,IAAIC,EAAWP,IAAYC,MAAMP,EAAMQ,SAASC,QAAQJ,KAExD,OAAIQ,IAAaD,EAAMP,KACd,CACLJ,OAAQ,GACRC,aAAa,EACbC,eAAe,EACfC,OAAO,EACPC,KAAMQ,EACNH,MAAO,GAIJ,M,EAGTI,mBAAA,WACMC,KAAKH,MAAMV,aAAoC,IAArBa,KAAKH,MAAMF,OACvCK,KAAKC,e,EAITA,YAAA,WAAe,IAAD,OACZC,MAAM,gEAAkEF,KAAKH,MAAMP,KAAM,CAAEa,OAAQ,QAChGC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACqB,IAArBA,EAAUC,QACZ,EAAKC,SAAS,CACZtB,aAAa,EACbC,eAAe,EACfC,OAAO,IAMX,IAFA,IAAIqB,EAAU,GAELC,EAAI,EAAGA,EAAIJ,EAAUC,SAAUG,EACtCD,EAAQE,KAAK,kBAAC,IAAD,CAAOC,MAAON,EAAUI,GAAIG,IAAKH,EAAI,EAAKd,MAAMF,SAG/D,EAAKc,SAAS,CACZvB,OAAQ,EAAKW,MAAMX,OAAO6B,OAAOL,GACjCtB,eAAe,EACfO,MAAO,EAAKE,MAAMF,MAAQY,EAAUC,YAGvCQ,OAAM,SAAA3B,GACL,EAAKoB,SAAS,CACZtB,aAAa,EACbC,eAAe,EACfC,OAAO,Q,GA/Da4B,WAqEflC","file":"component---src-pages-tweets-jsx-cffea28b8d96bde2b916.js","sourcesContent":["import React from \"react\"\nimport queryString from 'query-string'\n\nimport Index from \"./index.jsx\"\nimport Tweet from \"../components/tweet\"\n\nclass GeneratedTweets extends Index {\n  getState(props) {\n    return {\n      tweets: [],\n      canLoadMore: true,\n      loadingTweets: true,\n      error: false,\n      user: queryString.parse(props.location.search).user,\n      count: 0\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let new_user = queryString.parse(props.location.search).user\n\n    if (new_user !== state.user) {\n      return {\n        tweets: [],\n        canLoadMore: true,\n        loadingTweets: true,\n        error: false,\n        user: new_user,\n        count: 0\n      }\n    }\n\n    return null\n  }\n\n  componentDidUpdate() {\n    if (this.state.canLoadMore && this.state.count === 0) {\n      this.fetchTweets()\n    }\n  }\n\n  fetchTweets() {\n    fetch('https://infinite-scroll-is-not-enough.herokuapp.com/generate/' + this.state.user, { method: 'Get' })\n      .then(res => res.json())\n      .then(tweet_arr => {\n        if (tweet_arr.length === 0) {\n          this.setState({\n            canLoadMore: false,\n            loadingTweets: false,\n            error: true \n          })\n        }\n        \n        let _tweets = []\n\n        for (let i = 0; i < tweet_arr.length; ++i) {\n          _tweets.push(<Tweet tweet={tweet_arr[i]} key={i + this.state.count} />)\n        }\n\n        this.setState({\n          tweets: this.state.tweets.concat(_tweets),\n          loadingTweets: false,\n          count: this.state.count + tweet_arr.length\n        })\n      })\n      .catch(error => {\n        this.setState({\n          canLoadMore: false,\n          loadingTweets: false,\n          error: true \n        })\n      })\n  }\n}\n\nexport default GeneratedTweets\n\n"],"sourceRoot":""}